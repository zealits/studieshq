name: Node.js CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the repository
      - name: Checkout repository
        uses: actions/checkout@v3

      # Step 2: Set up Node.js environment
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "20.x"

      # Step 3: Install backend dependencies (root)
      - name: Install backend dependencies
        run: npm install
        working-directory: .

      # # Step 4: Install frontend dependencies
      # - name: Install frontend dependencies
      #   run: npm install --force
      #   working-directory: ./frontend

      # # Step 5: Build the frontend application
      # - name: Build frontend application
      #   run: npm run build
      #   working-directory: ./frontend

      # Step 6: Setup SSH for Deployment
      - name: Setup SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H dev.zealits.com >> ~/.ssh/known_hosts

      # Step 7: Deploy to the server
      - name: Deploy to server
        if: github.ref == 'refs/heads/main'
        run: |
          ssh admin@dev.zealits.com << 'EOF'
            # Backup the config.env file if it exists
            if [ -f ~/studieshq/config/config.env ]; then
              cp ~/studieshq/config/config.env ~/config.env.bak
            fi

            # Remove the ~/studieshq folder if it exists
            rm -rf ~/studieshq || true

            # Clone the repository
            git clone https://github.com/zealits/studieshq.git

            # Restore the config.env file
            if [ -f ~/config.env.bak ]; then
              mv ~/config.env.bak ~/studieshq/config/config.env
            fi

            # Navigate to the directory
            cd ~/studieshq

            # Install backend dependencies
            npm install

            # Install frontend dependencies and build
            cd frontend
            npm install --force
            npm run build
            cd ..

            # Restart the application using PM2
            if pm2 list | grep -q "orders-app"; then
             pm2 restart orders-app
            else
             pm2 start npm --name "orders-app" -- run dev
            fi
          EOF
